

****************************  쿠키 만들기 ********************************

		//1. 쿠키데이터를 이용한 쿠키 객체 만들기( "쿠키명" , "데이터(리스트됨)")
		Cookie cookie = new Cookie( "mycookie" , "아이맥");
		//2. 쿠키 생명주기
		cookie.setMaxAge(60); // 쿠키 생명주기 [ 1분 ]
		//3. 쿠키 내용 변경
		cookie.setValue("애플");
		//4. 클라이언트[브라우저]에게 쿠키 전달[해당 브라우저 쿠키 저장]
		response.addCookie(cookie);


****************************  쿠키 불러오기 ********************************

		//1. 모든 쿠키 가져오기
		Cookie[] cookies = request.getCookies();
						//Arrays 배열내 값 확인
		System.out.println(Arrays.toString(cookies));
		if(cookies != null){
			for(int i = 0; i<cookies.length;i++){
				System.out.print(cookies[i].getName());
				if(cookies[i].getName().equals("mycookie")){
					%>
						내 쿠키이름 : <%=cookies[i].getName() %>
						내 쿠키값 :	<%=cookies[i].getValue() %>
					<%
				}
			}
		}
		
****************************  세션 만들기 ********************************		


	// 1. [쿠키와 달리 세션은 내장객체[미리만들어진 객체]]
		session.setAttribute("id", "qweqwe");	// 세션저장소[ 톰캣 ]
		session.setAttribute("password", "123");
		// 2. 세션 생명주기 [세션 호출이 없을때]
		session.setMaxInactiveInterval(60); // 60초 [기본값 : 30분]
		
		
****************************  세션 불러오기 ********************************	
			
		
		//하나의 세션 호출
		out.print(session.getAttribute("id"));
		//여러개의 세션 호출 [getAttributeNames->반환타입(Enumeration)]
				//*Enumeration : 리스트 혹은 배열의 항목들을 순회
		Enumeration enumeration = session.getAttributeNames();
		
		while(enumeration.hasMoreElements()){
					// hasMoreElements() :다음 항목 존재여부 확인
			String name = (String)enumeration.nextElement();
					//.nextElement(); :다음 항목 가져오기
					// 쿠키의 이름 하나 가져오기
			String value = (String)session.getAttribute(name);
					//가져온 쿠키이름의 세션 데이터 호출
			out.println("세션이름 :"+name+"세션값은 :"+value);
		
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
